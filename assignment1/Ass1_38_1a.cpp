#include <sys/types.h>
#include <unistd.h>
#include <iostream>
#include <algorithm>
#include <stdlib.h>
#include <time.h>

using namespace std;

int main(){
	int pipe1[2];
	int pipe2[2];
	int pipe3[2];
	pid_t x = 0;
	pipe(pipe1);
	pipe(pipe2);
	pipe(pipe3);
	x = fork();
	if(x){
		srand(time(NULL));
		int arr[100];
		cout << "Numbers Generated by Process with PID: " << getpid() << endl;
		for (int i = 0; i < 100; i++){
			arr[i] = rand()%1000;
			cout << arr[i] << " ";
		}
		cout << endl;
		sort(arr,arr+100);
		write(pipe1[1],&arr,sizeof(int)*100);
		close(pipe1[1]);
	}
	else{
		x = fork();
		if(x){
			srand(time(NULL)+10);
			int arr[100];
			cout << "Numbers Generated by Process with PID: " << getpid() << endl;
			for (int i = 0; i < 100; i++){
				arr[i] = rand()%1000;
				cout << arr[i] << " ";
			}
			cout << endl;
			sort(arr,arr+100);
			write(pipe2[1],&arr,sizeof(int)*100);
			close(pipe2[1]);
		}
		else{
			x = fork();
			if(x){
				srand(time(NULL)+20);
				int arr[100];
				cout << "Numbers Generated by Process with PID: " << getpid() << endl;
				for (int i = 0; i < 100; i++){
					arr[i] = rand()%1000;
					cout << arr[i] << " ";
				}
				cout << endl;
				sort(arr,arr+100);
				write(pipe3[1],&arr,sizeof(int)*100);
				close(pipe3[1]);
			}
			else{
				int list1[100];
				int list2[100];
				int list3[100];
				int r1,r2,r3;

				r1 = read(pipe1[0],&list1,sizeof(int)*100);
				r2 = read(pipe2[0],&list2,sizeof(int)*100);
				r3 = read(pipe3[0],&list3,sizeof(int)*100);

				int i = 0, j = 0, k = 0;
				cout << "Sorted Numbers Received by PID " << getpid() << " after merging" << endl;
				for(int l = 0; l < 300; l++){
					if(list1[i] <= list2[j] && list1[i] <= list3[k] && i < 100){
						cout << list1[i] << " ";
						i++;
					}
					else if(list2[j] <= list1[i] && list2[j] <= list3[k] && j < 100){
						cout << list2[j] << " ";
						j++;
					}
					else{
						cout << list3[k] << " ";
						k++;
					}
				}
			}
		}
	}
	return 0;
}
